package ${package.Controller};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

#if(${restControllerStyle})
## import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if($swaggerVersion == 3)
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.Operation;
#end
#if($swaggerVersion == 2)
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import ${package.Service}.${table.serviceName};
import ${model.namespace}.*;
import dev.core.Rest;

/**
 * $!{table.comment}
 *
 * @author ${author}
 * @since ${date}
 */
#if($swaggerVersion == 3)
@Tag(name = "$!{table.comment}")
#end
#if($swaggerVersion == 2)
@Api(tags = "$!{table.comment}")
#end
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${modelService};

    #if($swaggerVersion == 3)
    @Operation(summary = "列表")
    #end
    #if($swaggerVersion == 2)
    @ApiOperation(value = "列表")
    #end
    @PostMapping("/list")
    public Rest.Page<${model.grid.type}> list(@RequestBody ${model.query.type} form) {

        var page = ${modelService}.tryQuery(form);
        return Rest.page(page.getRecords(), page.getCurrent() + 1, page.getSize(), page.getTotal());
    }

    #if($swaggerVersion == 3)
    @Operation(summary = "详情")
    #end
    #if($swaggerVersion == 2)
    @ApiOperation(value = "详情")
    #end
    @GetMapping("/info")
    public Rest<${model.info.type}> info(@RequestParam ${model.key.propertyType} ${model.key.propertyName}) {

        var info = ${modelService}.tryGet(${model.key.propertyName});
        return Rest.data(info);
    }

    #if($swaggerVersion == 3)
    @Operation(summary = "新增")
    #end
    #if($swaggerVersion == 2)
    @ApiOperation(value = "新增")
    #end
    @PostMapping("/add")
#if($model.key)
    public Rest<${model.key.propertyType}> add(@RequestBody ${model.add.type} form) {

        var key = ${modelService}.tryAdd(form);
        return Rest.data(key);
    }
#else
    public Rest.Message add(@RequestBody ${model.add.type} form) {

        var ok = ${modelService}.tryAdd(form);
        return ok ? Rest.ok() : Rest.error();
    }
#end

    #if($swaggerVersion == 3)
    @Operation(summary = "修改")
    #end
    #if($swaggerVersion == 2)
    @ApiOperation(value = "修改")
    #end
    @PostMapping("/update")
    public Rest.Message update(@RequestBody ${model.update.type} form) {

        var ok = ${modelService}.tryUpdate(form);
        return ok ? Rest.ok() : Rest.error();
    }

    #if($swaggerVersion == 3)
    @Operation(summary = "删除")
    #end
    #if($swaggerVersion == 2)
    @ApiOperation(value = "删除")
    #end
    @PostMapping("/remove")
    public Rest.Message remove(@RequestBody ${model.remove.type} form) {

        var ok = ${modelService}.tryRemove(form);
        return ok ? Rest.ok() : Rest.error();
    }
}
